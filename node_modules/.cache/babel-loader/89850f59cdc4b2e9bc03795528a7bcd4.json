{"ast":null,"code":"var _jsxFileName = \"/home/kuliza-438/Desktop/rect_redux/my_react_redux/src/components/posts.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchPosts } from '../actions/postActions';\n\nclass Posts extends Component {\n  componentWillMount() {\n    this.props.fetchPosts();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.newPost) {\n      this.props.posts.unshift(nextProps.newPost);\n    }\n  }\n\n  render() {\n    const postItem = this.props.posts.map(post => React.createElement(\"div\", {\n      key: post.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, post.title), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, post.body)));\n    return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"Posts\"), postItem);\n  }\n\n}\n\nPosts.propTypes = {\n  fetchPosts: PropTypes.func.isRequired,\n  posts: PropTypes.array.isRequired,\n  newPost: PropTypes.object\n};\n\nconst mapStateToProps = state => ({\n  posts: state.posts.items,\n  newPost: state.posts.item\n});\n\nexport default connect(mapStateToProps, {\n  fetchPosts\n})(Posts);","map":{"version":3,"sources":["/home/kuliza-438/Desktop/rect_redux/my_react_redux/src/components/posts.js"],"names":["React","Component","PropTypes","connect","fetchPosts","Posts","componentWillMount","props","componentWillReceiveProps","nextProps","newPost","posts","unshift","render","postItem","map","post","id","title","body","propTypes","func","isRequired","array","object","mapStateToProps","state","items","item"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,wBAA3B;;AAGC,MAAMC,KAAN,SAAoBJ,SAApB,CAA8B;AAC3BK,EAAAA,kBAAkB,GAAE;AAChB,SAAKC,KAAL,CAAWH,UAAX;AACH;;AAEDI,EAAAA,yBAAyB,CAACC,SAAD,EAAW;AAChC,QAAGA,SAAS,CAACC,OAAb,EAAqB;AACjB,WAAKH,KAAL,CAAWI,KAAX,CAAiBC,OAAjB,CAAyBH,SAAS,CAACC,OAAnC;AACH;AACJ;;AAEDG,EAAAA,MAAM,GAAG;AACL,UAAMC,QAAQ,GAAG,KAAKP,KAAL,CAAWI,KAAX,CAAiBI,GAAjB,CAAqBC,IAAI,IACtC;AAAK,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,IAAI,CAACE,KAAV,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIF,IAAI,CAACG,IAAT,CAFJ,CADa,CAAjB;AAMA,WACI,0CACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEKL,QAFL,CADJ;AAMH;;AAxB0B;;AA2B/BT,KAAK,CAACe,SAAN,GAAkB;AACdhB,EAAAA,UAAU,EAAEF,SAAS,CAACmB,IAAV,CAAeC,UADb;AAEdX,EAAAA,KAAK,EAAET,SAAS,CAACqB,KAAV,CAAgBD,UAFT;AAGdZ,EAAAA,OAAO,EAAER,SAAS,CAACsB;AAHL,CAAlB;;AAMA,MAAMC,eAAe,GAAGC,KAAK,KAAI;AAC7Bf,EAAAA,KAAK,EAAEe,KAAK,CAACf,KAAN,CAAYgB,KADU;AAE7BjB,EAAAA,OAAO,EAAEgB,KAAK,CAACf,KAAN,CAAYiB;AAFQ,CAAJ,CAA7B;;AAIA,eAAezB,OAAO,CAACsB,eAAD,EAAiB;AAACrB,EAAAA;AAAD,CAAjB,CAAP,CAAsCC,KAAtC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchPosts } from '../actions/postActions';\n\n\n class Posts extends Component {\n    componentWillMount(){\n        this.props.fetchPosts();\n    }\n\n    componentWillReceiveProps(nextProps){\n        if(nextProps.newPost){\n            this.props.posts.unshift(nextProps.newPost);\n        }\n    }\n\n    render() {\n        const postItem = this.props.posts.map(post =>(\n            <div key={post.id}>\n                <h3>{post.title}</h3>\n                <p>{post.body}</p>\n            </div>\n        ));\n        return (\n            <>\n                <h1>Posts</h1>\n                {postItem}\n            </>\n        )\n    }\n}\n\nPosts.propTypes = {\n    fetchPosts: PropTypes.func.isRequired,\n    posts: PropTypes.array.isRequired,\n    newPost: PropTypes.object\n}\n\nconst mapStateToProps = state =>({\n    posts: state.posts.items,\n    newPost: state.posts.item\n});\nexport default connect(mapStateToProps,{fetchPosts})(Posts);\n"]},"metadata":{},"sourceType":"module"}