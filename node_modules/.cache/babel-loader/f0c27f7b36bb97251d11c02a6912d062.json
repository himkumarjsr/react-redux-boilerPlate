{"ast":null,"code":"import { FETCH_POSTS, NEW_POST } from './types';\nexport const fetchPosts = () => dispatch => {\n  fetch('https://jsonplaceholder.typicode.com/posts').then(res => res.json()).then(posts => dispatch({\n    type: FETCH_POSTS,\n    payload: posts\n  }));\n};\nexport const createPosts = postData => dispatch => {\n  fetch('https://jsonplaceholder.typicode.com/posts', {\n    method: 'POST',\n    headers: {\n      'content-type': 'application/json'\n    },\n    body: JSON.stringify(post)\n  }).then(res => res.json()).then(data => dispatch({\n    type: FETCH_POSTS,\n    payload: posts\n  }));\n};","map":{"version":3,"sources":["/home/kuliza-438/Desktop/rect_redux/my_react_redux/src/actions/postActions.js"],"names":["FETCH_POSTS","NEW_POST","fetchPosts","dispatch","fetch","then","res","json","posts","type","payload","createPosts","postData","method","headers","body","JSON","stringify","post","data"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAMC,QAAQ,IAAI;AAExCC,EAAAA,KAAK,CAAC,4CAAD,CAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUG,KAAK,IAAIL,QAAQ,CAAC;AACpBM,IAAAA,IAAI,EAAET,WADc;AAEpBU,IAAAA,OAAO,EAAEF;AAFW,GAAD,CAF3B;AAOH,CATM;AAWP,OAAO,MAAMG,WAAW,GAAIC,QAAD,IAAcT,QAAQ,IAAI;AACjDC,EAAAA,KAAK,CAAC,4CAAD,EAA+C;AAChDS,IAAAA,MAAM,EAAE,MADwC;AAEhDC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX,KAFuC;AAKhDC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeC,IAAf;AAL0C,GAA/C,CAAL,CAOKb,IAPL,CAOUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAPjB,EAQKF,IARL,CAQUc,IAAI,IAAIhB,QAAQ,CAAC;AACnBM,IAAAA,IAAI,EAAET,WADa;AAEnBU,IAAAA,OAAO,EAAEF;AAFU,GAAD,CAR1B;AAaH,CAdM","sourcesContent":["import { FETCH_POSTS, NEW_POST } from './types';\n\nexport const fetchPosts = () => dispatch => {\n\n    fetch('https://jsonplaceholder.typicode.com/posts')\n        .then(res => res.json())\n        .then(posts => dispatch({\n            type: FETCH_POSTS,\n            payload: posts\n        })\n        );\n};\n\nexport const createPosts = (postData) => dispatch => {\n    fetch('https://jsonplaceholder.typicode.com/posts', {\n        method: 'POST',\n        headers: {\n            'content-type': 'application/json'\n        },\n        body: JSON.stringify(post)\n    })\n        .then(res => res.json())\n        .then(data => dispatch({\n            type: FETCH_POSTS,\n            payload: posts\n        })\n        );\n};"]},"metadata":{},"sourceType":"module"}